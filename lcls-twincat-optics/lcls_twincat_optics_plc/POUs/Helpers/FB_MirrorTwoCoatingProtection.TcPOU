<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="FB_MirrorTwoCoatingProtection" Id="{e481ed92-d77f-4692-a2ea-e5f1d2863716}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_MirrorTwoCoatingProtection
VAR_INPUT
	nCurrentEncoderCount : UDINT; // Current encoder count
	neVRange : DWORD; // Current ev range from stCurrentBeamParams	

	sDevName : STRING := ''; // Device name	

	nUpperCoatingBoundary : UDINT; // Encoder count for upper boundary
	nUpperCoatingBitmask : DWORD; // Bitmask for upper coating
	sUpperCoatingType : STRING := ''; // Type of coating
	
	nLowerCoatingBoundary : UDINT; // Encoder count for lower boundary
	nLowerCoatingBitMask : DWORD;
	sLowerCoatingType : STRING := ''; // Type of coating
    
    bAutoClear : BOOL := TRUE; // Auto-clear these fast faults
END_VAR
VAR_OUTPUT
END_VAR
VAR_IN_OUT
	FFO : FB_HardwareFFOutput;
END_VAR
VAR
	ffUpperCoating: FB_FastFault := (
		i_xAutoReset := FALSE,
		i_TypeCode := 16#401);
	ffLowerCoating : FB_FastFault := (
		i_xAutoReset := FALSE,
		i_TypeCode := 16#401);
		
	bInit : BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT bInit THEN
	ffUpperCoating.i_Desc := CONCAT(sUpperCoatingType, ' mirror coating incompatible with beam photon energy');
	ffUpperCoating.i_DevName := sDevName;
	
	ffLowerCoating.i_Desc := CONCAT(sLowerCoatingType, ' mirror coating incompatible with beam photon energy');
	ffLowerCoating.i_DevName := sDevName;
	
	bInit := TRUE;
END_IF

IF nCurrentEncoderCount <= nLowerCoatingBoundary THEN
	ffLowerCoating.i_xOK := (neVRange AND nLowerCoatingBitMask) = neVRange; 
	ffUpperCoating.i_xOK  := TRUE;
ELSIF nCurrentEncoderCount >= nUpperCoatingBoundary THEN
 	ffUpperCoating.i_xOK := (neVRange AND nUpperCoatingBitmask) = neVRange;
	ffLowerCoating.i_xOK := TRUE;
ELSE
	ffLowerCoating.i_xOK := FALSE;
	ffUpperCoating.i_xOK := FALSE;
END_IF

ffUpperCoating(io_fbFFHWO:=FFO, i_xAutoReset := bAutoClear);
ffLowerCoating(io_fbFFHWO:=FFO, i_xAutoReset := bAutoClear);]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>